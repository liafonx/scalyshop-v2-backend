image: alpine:latest

variables:
  AUTO_BUILD_IMAGE_VERSION: 'v4.3.0'
  DOCKER_HOST: tcp://0.0.0.0:2375
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: ''

stages:
  - build
  - deploy

build-job:
  stage: build
  image: 'registry.gitlab.com/gitlab-org/cluster-integration/auto-build-image:${AUTO_BUILD_IMAGE_VERSION}'
  services:
    - name: 'docker:24.0.5-dind'
      variables:
        HEALTHCHECK_TCP_PORT: "2375"
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - |
      if [[ -z "$CI_COMMIT_TAG" ]]; then
        export CI_APPLICATION_REPOSITORY=${CI_APPLICATION_REPOSITORY:-$CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG}
        export CI_APPLICATION_TAG=${CI_APPLICATION_TAG:-$CI_COMMIT_SHA}
      else
        export CI_APPLICATION_REPOSITORY=${CI_APPLICATION_REPOSITORY:-$CI_REGISTRY_IMAGE}
        export CI_APPLICATION_TAG=${CI_APPLICATION_TAG:-$CI_COMMIT_TAG}
      fi
    - docker pull $CI_APPLICATION_REPOSITORY || true
    - docker build --cache-from $CI_APPLICATION_REPOSITORY:$CI_APPLICATION_TAG -t $CI_APPLICATION_REPOSITORY:latest -t $CI_APPLICATION_REPOSITORY:$CI_APPLICATION_TAG .
    - docker push $CI_APPLICATION_REPOSITORY:latest
    - docker push $CI_APPLICATION_REPOSITORY:$CI_APPLICATION_TAG
  rules:
    - if: $CI_COMMIT_BRANCH == 'backend-local'

# test-job:
#   TODO

deploy-helm:
  stage: deploy
  image: dtzar/helm-kubectl
  dependencies:
    - build-job
  before_script:
    # Decode the base64-encoded kubeconfig from CI/CD variable and set it for kubectl/helm.
    - echo "$KUBE_CONFIG" | base64 -d > kubeconfig
    - export KUBECONFIG=$PWD/kubeconfig
  script:
    - echo "Deploying the application using Helm upgrade --install..."
    - echo "${CI_APPLICATION_REPOSITORY}:${CI_APPLICATION_TAG}"
    - helm upgrade --install scalyshop-backend ./scalyshop-backend --set image.repository="${CI_APPLICATION_REPOSITORY}",image.tag="${CI_APPLICATION_TAG}"
    - kubectl wait --for=condition=Available --timeout=60s deployment/scalyshop-frontend -n scalyshop
  rules:
    - if: '$CI_COMMIT_BRANCH == "backend-local"'